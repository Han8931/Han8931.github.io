<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - Han&#39;s XYZ</title>
        <link>http://localhost:1313/posts/</link>
        <description>All Posts | Han&#39;s XYZ</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>tabularasa8931@gmail.com (Han)</managingEditor>
            <webMaster>tabularasa8931@gmail.com (Han)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 15 Aug 2024 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://localhost:1313/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Introduction to Singular Value Decomposition</title>
    <link>http://localhost:1313/20240815_svd/</link>
    <pubDate>Thu, 15 Aug 2024 00:00:00 &#43;0000</pubDate>
    <author>Han</author>
    <guid>http://localhost:1313/20240815_svd/</guid>
    <description><![CDATA[Singular Value Decomposition In linear algebra, the singular value decomposition (SVD) is a factorization of a real or complex matrix. It generalizes the eigendecomposition of a square matrix by extending the concept to asymmetric or rectangular matrices, which cannot be diagonalized directly using eigendecomposition. The SVD aims to find the following decomposition of a real-valued matrix $A$: $$A = U\Sigma V^T,$$ where $U$ and $V$ are orthogonal (orthonormal) matrices, and $\Sigma$ is a diagonal matrix.]]></description>
</item>
<item>
    <title>Getting Started with Regression (Part 3)</title>
    <link>http://localhost:1313/20240812_recursive_least_square/</link>
    <pubDate>Mon, 12 Aug 2024 00:00:00 &#43;0000</pubDate>
    <author>Han</author>
    <guid>http://localhost:1313/20240812_recursive_least_square/</guid>
    <description><![CDATA[Deep Dive into Regression: Recursive Least Squares Explained (Part 3) Introduction to Recursive Least Squares Ordinary least squares assumes that all data is available at once, but in practice, this isn&rsquo;t always the case. Often, measurements are obtained sequentially, and we need to update our estimates as new data comes in. Simply augmenting the data matrix $\mathbf{X}$ each time a new measurement arrives can become computationally expensive, especially when dealing with a large number of measurements.]]></description>
</item>
<item>
    <title>Getting Started with Regression (Part 2)</title>
    <link>http://localhost:1313/20240811_regression2/</link>
    <pubDate>Sun, 11 Aug 2024 00:00:00 &#43;0000</pubDate>
    <author>Han</author>
    <guid>http://localhost:1313/20240811_regression2/</guid>
    <description><![CDATA[An Introductory Guide (Part 2) Understanding Ridge Regression In machine learning, one of the key challenges is finding the right balance between underfitting and overfitting a model.
Overfitting occurs when a model is too complex and captures not only the underlying patterns in the training data but also the noise. This results in a model that performs well on the training data but poorly on new, unseen data.
Underfitting, on the other hand, happens when a model is too simple to capture the underlying patterns in the data, leading to poor performance both on the training data and on new data.]]></description>
</item>
<item>
    <title>Getting Started with Regression (Part 1)</title>
    <link>http://localhost:1313/20240810_regression1/</link>
    <pubDate>Sat, 10 Aug 2024 00:00:00 &#43;0000</pubDate>
    <author>Han</author>
    <guid>http://localhost:1313/20240810_regression1/</guid>
    <description><![CDATA[An Introductory Guide (Part 1) Even with the rapid advancements in deep learning, regression continues to be widely used across various fields (e.g., finance, data science, statistics, and so on), maintaining its importance as a fundamental algorithm. That&rsquo;s why I&rsquo;ve decided to share this post, which is the first article in a dedicated series on regression. This series is designed to provide a thorough review while offering a gentle and accessible introduction.]]></description>
</item>
<item>
    <title>Data Encryption using GPG!</title>
    <link>http://localhost:1313/20240804_gpg_encryption/</link>
    <pubDate>Sun, 04 Aug 2024 00:00:00 &#43;0000</pubDate>
    <author>Han</author>
    <guid>http://localhost:1313/20240804_gpg_encryption/</guid>
    <description><![CDATA[Securing Your Privacy The importance of securing your data has become critical in the modern digital era. This post explores a versatile tool called GnuPG, or GNU Privacy Guard, which allows you to encrypt your data and communications, ensuring that only the intended recipients can access them.
Asymmetric Encryption Before looking at GPG, let’s first review some encryption approaches. A very naive approach to sharing encrypted files is to use the same secret key between a sender and a receiver.]]></description>
</item>
<item>
    <title>Manage your task with TaskSpooler!</title>
    <link>http://localhost:1313/20240713_taskspooler/</link>
    <pubDate>Sat, 13 Jul 2024 00:00:00 &#43;0000</pubDate>
    <author>Han</author>
    <guid>http://localhost:1313/20240713_taskspooler/</guid>
    <description><![CDATA[What is TaskSpooler ? TaskSpooler (ts) is a lightweight job scheduler that allows you to queue up your tasks and execute them in order. It’s particularly useful for environments where tasks need to be managed sequentially or with a controlled degree of parallelism. Unlike more complex systems like SLURM, TaskSpooler is designed for simplicity and ease of use, making it accessible for individual researchers and small teams.
Efficient Job Scheduling for ML/DL Researchers with Taskspooler In the dynamic field of Machine Learning (ML) and Deep Learning (DL), managing and optimizing computational resources is crucial.]]></description>
</item>
<item>
    <title>Dependency Management in Python</title>
    <link>http://localhost:1313/20240707_poetry/</link>
    <pubDate>Sun, 07 Jul 2024 00:00:00 &#43;0000</pubDate>
    <author>Han</author>
    <guid>http://localhost:1313/20240707_poetry/</guid>
    <description><![CDATA[Introduction Poetry is a dependency management and packaging tool in Python, aiming to improve how you define, install, and manage project dependencies.
Installation: You can install Poetry through its custom installer script or using package managers. The recommended way is to use their installer script to ensure you get the latest version. Creating a New Project: Use poetry new &lt;project-name&gt; to create a new project with a standard layout. Adding Dependencies: Add new dependencies directly to your project using poetry add &lt;package&gt;.]]></description>
</item>
<item>
    <title>Handy Pacman Commands in Arch Linux</title>
    <link>http://localhost:1313/20240501_pacman/</link>
    <pubDate>Wed, 01 May 2024 00:00:00 &#43;0000</pubDate>
    <author>Han</author>
    <guid>http://localhost:1313/20240501_pacman/</guid>
    <description><![CDATA[Pacman , the package manager for Arch Linux, is known for its simple binary package format and easy-to-use build system . The primary aim of Pacman is to facilitate straightforward management of packages from both the official repositories and user-generated builds.
Pacman ensures your system remains updated by synchronizing the package lists with the master server. This client/server model simplifies the process of downloading and installing packages, along with all their dependencies, using basic commands.]]></description>
</item>
<item>
    <title>Vim, Type at the Speed of Thought!</title>
    <link>http://localhost:1313/20240501_vim/</link>
    <pubDate>Wed, 01 May 2024 00:00:00 &#43;0000</pubDate>
    <author>Han</author>
    <guid>http://localhost:1313/20240501_vim/</guid>
    <description><![CDATA[While it may look somewhat obsolete in an era dominated by graphically rich IDEs, Vim remains not just a highly relevant and effective tool for today&rsquo;s programmers but also a badge of coolness in the tech world. Those who master its commands are often seen as coding wizards. With its unique advantages in speed, efficiency, and customizability, Vim is an invaluable asset in software development environments, proving that old-school can still be trendy.]]></description>
</item>
<item>
    <title>Why Use Python&#39;s `pdb` Debugger Over an IDE?</title>
    <link>http://localhost:1313/20240426_pdb/</link>
    <pubDate>Sat, 27 Apr 2024 00:00:00 &#43;0000</pubDate>
    <author>Han</author>
    <guid>http://localhost:1313/20240426_pdb/</guid>
    <description><![CDATA[When it comes to debugging Python code, most programmers reach for an Integrated Development Environment (IDE) because of its convenience and powerful features. However, there&rsquo;s a classic, built-in tool that shouldn&rsquo;t be overlooked: Python&rsquo;s own debugger, pdb. This tool might seem basic at first glance, but it offers some compelling advantages, especially in scenarios where an IDE might be less effective. Here&rsquo;s why you might consider using pdb for debugging your Python projects:]]></description>
</item>
</channel>
</rss>
