<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Type Hint - Tag - Han&#39;s XYZ</title>
        <link>https://han8931.github.io/tags/type-hint/</link>
        <description>Type Hint - Tag - Han&#39;s XYZ</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>tabularasa8931@gmail.com (Han)</managingEditor>
            <webMaster>tabularasa8931@gmail.com (Han)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 20 Apr 2024 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://han8931.github.io/tags/type-hint/" rel="self" type="application/rss+xml" /><item>
    <title>Type hint in Python</title>
    <link>https://han8931.github.io/20240421_type-hint/</link>
    <pubDate>Sat, 20 Apr 2024 00:00:00 &#43;0000</pubDate>
    <author>Han</author>
    <guid>https://han8931.github.io/20240421_type-hint/</guid>
    <description><![CDATA[Type hinting is not mandatory, but it can make your code easier to understand and debug by
Improved readability Better IDE support: IDEs and linters can use type hints to check your code for potential errors before runtime. While type hints can be simple classes like float or str , they can also be more complex. The typing module provides a vocabulary of more advanced type hints.
Basics 1 2 3 4 5 6 7 8 9 10 11 12 # This is how you declare the type of a variable age: int = 1 # You don&#39;t need to initialize a variable to annotate it a: int # Ok (no value at runtime until assigned) # Doing so can be useful in conditional branches child: bool if age &lt; 18: child = True else: child = False 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 x: int = 1 x: float = 1.]]></description>
</item>
</channel>
</rss>
